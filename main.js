!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"},r=(e,t,r)=>{const o=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),o.textContent=""},o=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.setAttribute("disabled",!0)},n=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?o(t,r):(t.removeAttribute("disabled"),t.classList.remove(r.inactiveButtonClass))};function a(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",o=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?o:r}function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Saving...";t.preventDefault();const o=t.submitter,n=o.textContent;a(o,!0,n,r),e().then((()=>{t.target.reset()})).catch(console.error).finally((()=>{a(o,!1,n)}))}var l=e+"80804e27ce061efd1ffb.svg",c=e+"2fc47fd8e9a9bcd9612f.jpg",d=e+"3f562ce83766a824571e.svg",i=e+"d73f076c46eb5467f5fc.svg",u=e+"975792ea68af0a3c209d.svg";document.getElementById("logoSpots").src=l,document.getElementById("pencilImage").src=d,document.getElementById("avatarPencil").src=i,document.getElementById("plusIcon").src=u,document.getElementById("bessieAvatar").src=c;const m=document.querySelector("#edit-profile-modal"),_=document.querySelector(".profile__edit-btn"),v=document.querySelector(".profile__add-btn"),f=document.querySelector(".profile__avatar-btn"),h=document.querySelector(".profile__name"),p=document.querySelector(".profile__description"),y=document.querySelector(".profile__avatar"),S=m.querySelector(".modal__form"),b=m.querySelector(".modal__close"),g=m.querySelector("#profile-name-input"),q=m.querySelector("#profile-description-input"),L=document.querySelector("#add-card-modal"),E=L.querySelector(".modal__close"),k=L.querySelector(".modal__form"),C=L.querySelector(".modal__submit-btn"),I=(L.querySelector(".modal__submit-btn_disabled"),L.querySelector("#add-card-name-input")),A=L.querySelector("#add-card-link-input"),U=document.querySelector("#avatar-modal"),x=U.querySelector(".modal__close"),D=U.querySelector(".modal__form"),$=(U.querySelector(".modal__submit-btn"),U.querySelector("#profile-avatar-input")),B=document.querySelector("#delete-modal"),R=B.querySelector(".card__delete-form"),T=B.querySelector(".card__delete-form_close"),w=B.querySelector(".card__submit-btn_cancel"),P=document.querySelector("#preview-modal"),N=P.querySelector(".modal__image"),j=P.querySelector(".modal__caption"),O=P.querySelector(".modal__close_preview"),J=document.querySelector("#card-template"),G=document.querySelector(".cards__list");let H,z;I.addEventListener("input",t),A.addEventListener("input",t);const M=new class{constructor(e){let{baseURL:t,headers:r}=e;this._baseURL=t,this._headers=r}_checkresponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkresponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return this._request(`${this._baseURL}/cards`,{method:"GET",headers:this._headers})}getUserInfo(){return this._request(`${this._baseURL}/users/me`,{method:"GET",headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this._request(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addNewCard(e){let{name:t,link:r}=e;return this._request(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._request(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers})}handleLikeStatus(e,t){return this._request(`${this._baseURL}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseURL:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"ae624f98-22e3-40e2-ad55-6bf11082a736","Content-Type":"application/json"}});function F(e){const t=J.content.cloneNode(!0),r=t.querySelector(".card__title"),o=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),a=t.querySelector(".card__delete-btn");return e.isLiked&&n.classList.add("card__like-btn_liked"),r.textContent=e.name,o.src=e.link,o.alt=e.name,n.addEventListener("click",(t=>function(e,t){e.preventDefault();const r=!!e.target.closest(".card__like-btn_liked"),o=e.target.closest(".card__like-btn");M.handleLikeStatus(t,r).then((()=>{r?o.classList.remove("card__like-btn_liked"):o.classList.add("card__like-btn_liked")})).catch(console.error)}(t,e._id))),console.log(e._id),a.addEventListener("click",(t=>function(e,t){H=e.target.closest(".card"),z=t,console.log(t),V(B)}(t,e._id))),o.addEventListener("click",(()=>function(e){N.src=e.link,j.textContent=e.name,N.alt=e.name,V(P)}(e))),t}function K(e){"Escape"===e.key&&W(document.querySelector(".modal_opened"))}function Q(e){e.target.classList.contains("modal_opened")&&W(e.target)}function V(e){e.classList.add("modal_opened"),e.addEventListener("click",Q),document.addEventListener("keydown",K)}function W(e){e.classList.remove("modal_opened"),e.removeEventListener("click",Q),document.removeEventListener("keydown",K)}var X;M.getAppInfo().then((e=>{let[t,{name:r,about:o,avatar:n}]=e;console.log(t),t.forEach((e=>{const t=F(e);G.append(t)})),h.textContent=r,p.textContent=o,y.src=n})).catch(console.error),console.log("API instance created:",M),console.log("getAppInfo method exists:",typeof M.getAppInfo),_.addEventListener("click",(()=>{var e,o;g.value=h.textContent,q.value=p.textContent,e=S,o=t,[g,q].forEach((t=>{r(e,t,o)})),V(m)})),b.addEventListener("click",(()=>{W(m)})),v.addEventListener("click",(()=>{V(L)})),f.addEventListener("click",(()=>{V(U)})),D.addEventListener("submit",(function(e){e.preventDefault(),console.log($.value),M.editAvatarInfo($.value).then((e=>{console.log(e),y.src=e.avatar,W(U)})).catch(console.error)})),x.addEventListener("click",(()=>{W(U)})),T.addEventListener("click",(()=>{W(B)})),R.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,"Delete","Deleting..."),console.log("selectedCard:",H),console.log("Type of selectedCard:",typeof H),console.log(z),console.log("About to delete card with ID:",z),M.deleteCard(z).then((()=>{H.remove(),W(B)})).catch(console.error).finally((()=>{a(t,!1,"Delete","Deleting...")}))})),E.addEventListener("click",(()=>{W(L)})),O.addEventListener("click",(()=>{W(P)})),w.addEventListener("click",(()=>{W(B)})),S.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;a(t,!0,"Save","Saving..."),M.editUserInfo({name:g.value,about:q.value}).then((e=>{h.textContent=e.name,p.textContent=e.about,W(m),o(C,s)})).catch(console.error).finally((()=>{a(t,!1,"Save","Saving...")}))})),k.addEventListener("submit",(function(e){e.preventDefault(),s((function(){const t={name:I.value,link:A.value};return a(e.submitter,!0,"Save","Saving..."),M.addNewCard(t).then((t=>{const r=F(t);G.prepend(r),W(L),e.target.reset(),o(C,s)}))}),e)})),X=t,Array.from(document.querySelectorAll(X.formSelector)).forEach((e=>{((e,t)=>{const o=Array.from(e.querySelectorAll(t.inputSelector)),a=e.querySelector(t.submitButtonSelector);n(o,a,t),o.forEach((s=>{s.addEventListener("input",(function(){((e,t,o)=>{t.validity.valid?r(e,t,o):((e,t,r,o)=>{console.log(e);const n=e.querySelector(`#${t.id}-error`);t.classList.add(o.inputErrorClass),n.textContent=r})(e,t,t.validationMessage,o)})(e,s,t),n(o,a,t)}))}))})(e,X)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,