!function(){"use strict";var e="";const t={formSelector:".modal__form",inputSelector:".modal__input",submitButtonSelector:".modal__submit-btn",inactiveButtonClass:"modal__submit-btn_disabled",inputErrorClass:"modal__input_error",errorClass:"modal__error_visible"},r=(e,t,r)=>{const a=e.querySelector(`#${t.id}-error`);t.classList.remove(r.inputErrorClass),a.textContent=""},a=(e,t,a)=>{t.validity.valid?r(e,t,a):((e,t,r,a)=>{console.log(e);const n=e.querySelector(`#${t.id}-error`);t.classList.add(a.inputErrorClass),n.textContent=r})(e,t,t.validationMessage,a)},n=(e,t)=>{e.classList.add(t.inactiveButtonClass),e.setAttribute("disabled",!0)},o=(e,t,r)=>{(e=>e.some((e=>!e.validity.valid)))(e)?n(t,r):(t.removeAttribute("disabled"),t.classList.remove(r.inactiveButtonClass))};function s(e,t){let r=arguments.length>2&&void 0!==arguments[2]?arguments[2]:"Save",a=arguments.length>3&&void 0!==arguments[3]?arguments[3]:"Saving...";e.textContent=t?a:r}var d=e+"80804e27ce061efd1ffb.svg",c=e+"2fc47fd8e9a9bcd9612f.jpg",i=e+"3f562ce83766a824571e.svg",l=e+"d73f076c46eb5467f5fc.svg",u=e+"975792ea68af0a3c209d.svg";document.getElementById("logoSpots").src=d,document.getElementById("pencilImage").src=i,document.getElementById("avatarPencil").src=l,document.getElementById("plusIcon").src=u,document.getElementById("bessieAvatar").src=c;const m=document.querySelector("#edit-profile-modal"),_=document.querySelector(".profile__edit-btn"),v=document.querySelector(".profile__add-btn"),h=document.querySelector(".profile__avatar-btn"),f=document.querySelector(".profile__name"),S=document.querySelector(".profile__description"),y=document.querySelector(".profile__avatar"),b=m.querySelector(".modal__form"),p=m.querySelector(".modal__close"),q=m.querySelector("#profile-name-input"),L=m.querySelector("#profile-description-input"),E=document.querySelector("#add-card-modal"),g=E.querySelector(".modal__close"),k=E.querySelector(".modal__form"),C=E.querySelector(".modal__submit-btn"),I=(E.querySelector(".modal__submit-btn_disabled"),E.querySelector("#add-card-name-input")),U=E.querySelector("#add-card-link-input"),A=document.querySelector("#avatar-modal"),$=A.querySelector(".modal__close"),x=A.querySelector(".modal__form"),D=A.querySelector(".modal__submit-btn"),B=A.querySelector("#profile-avatar-input"),R=document.querySelector("#delete-modal"),T=R.querySelector(".card__delete-form"),w=R.querySelector(".card__delete-form_close"),P=R.querySelector(".card__submit-btn_cancel"),F=document.querySelector("#preview-modal"),N=F.querySelector(".modal__image"),j=F.querySelector(".modal__caption"),O=F.querySelector(".modal__close_preview"),J=document.querySelector("#card-template"),G=document.querySelector(".cards__list");let H,z;I.addEventListener("input",(e=>a(k,I,t))),U.addEventListener("input",(e=>a(k,U,t)));const M=new class{constructor(e){let{baseURL:t,headers:r}=e;this._baseURL=t,this._headers=r}_checkresponse(e){return e.ok?e.json():Promise.reject(`Error: ${e.status}`)}_request(e,t){return fetch(e,t).then(this._checkresponse)}getAppInfo(){return Promise.all([this.getInitialCards(),this.getUserInfo()])}getInitialCards(){return this._request(`${this._baseURL}/cards`,{method:"GET",headers:this._headers})}getUserInfo(){return this._request(`${this._baseURL}/users/me`,{method:"GET",headers:this._headers})}editUserInfo(e){let{name:t,about:r}=e;return this._request(`${this._baseURL}/users/me`,{method:"PATCH",headers:this._headers,body:JSON.stringify({name:t,about:r})})}editAvatarInfo(e){return this._request(`${this._baseURL}/users/me/avatar`,{method:"PATCH",headers:this._headers,body:JSON.stringify({avatar:e})})}addNewCard(e){let{name:t,link:r}=e;return this._request(`${this._baseURL}/cards`,{method:"POST",headers:this._headers,body:JSON.stringify({name:t,link:r})})}deleteCard(e){return this._request(`${this._baseURL}/cards/${e}`,{method:"DELETE",headers:this._headers})}handleLikeStatus(e,t){return this._request(`${this._baseURL}/cards/${e}/likes`,{method:t?"DELETE":"PUT",headers:this._headers})}}({baseURL:"https://around-api.en.tripleten-services.com/v1",headers:{authorization:"ae624f98-22e3-40e2-ad55-6bf11082a736","Content-Type":"application/json"}});function K(e){const t=J.content.cloneNode(!0),r=t.querySelector(".card__title"),a=t.querySelector(".card__image"),n=t.querySelector(".card__like-btn"),o=t.querySelector(".card__delete-btn");return e.isLiked&&n.classList.add("card__like-btn_liked"),r.textContent=e.name,a.src=e.link,a.alt=e.name,n.addEventListener("click",(t=>function(e,t){e.preventDefault();const r=!!e.target.closest(".card__like-btn_liked"),a=e.target.closest(".card__like-btn");M.handleLikeStatus(t,r).then((()=>{r?a.classList.remove("card__like-btn_liked"):a.classList.add("card__like-btn_liked")})).catch((e=>{console.error("Failed to fetch like data:",e)}))}(t,e._id))),o.addEventListener("click",(t=>function(e,t){H=e.target.closest(".card"),z=t,W(R)}(t,e._id))),a.addEventListener("click",(()=>function(e){N.src=e.link,j.textContent=e.name,N.alt=e.name,W(F)}(e))),t}function Q(e){"Escape"===e.key&&X(document.querySelector(".modal_opened"))}function V(e){e.target.classList.contains("modal_opened")&&X(e.target)}function W(e){e.classList.add("modal_opened"),e.addEventListener("click",V),document.addEventListener("keydown",Q)}function X(e){e.classList.remove("modal_opened"),e.removeEventListener("click",V),document.removeEventListener("keydown",Q)}var Y;M.getAppInfo().then((e=>{let[t,{name:r,about:a,avatar:n}]=e;t.forEach((e=>{const t=K(e);G.append(t)})),f.textContent=r,S.textContent=a,y.src=n})).catch((e=>{console.error("Failed to fetch card data:",e)})),_.addEventListener("click",(()=>{var e,a;q.value=f.textContent,L.value=S.textContent,e=b,a=t,[q,L].forEach((t=>{r(e,t,a)})),W(m)})),p.addEventListener("click",(()=>{X(m)})),v.addEventListener("click",(()=>{W(E)})),h.addEventListener("click",(()=>{W(A)})),x.addEventListener("submit",(function(e){e.preventDefault(),M.editAvatarInfo(B.value).then((r=>{y.src=r.avatar,X(A),e.target.reset(),n(D,t)})).catch((e=>{console.error("Failed to fetch avatar data:",e)}))})),$.addEventListener("click",(()=>{X(A)})),w.addEventListener("click",(()=>{X(R)})),T.addEventListener("submit",(function(e){e.preventDefault();const t=e.submitter;s(t,!0,"Delete","Deleting..."),M.deleteCard(z).then((()=>{H.remove(),X(R)})).catch((e=>{console.error("Failed to fetch Card Id data:",e)})).finally((()=>{s(t,!1,"Delete","Deleting...")}))})),g.addEventListener("click",(()=>{X(E)})),O.addEventListener("click",(()=>{X(F)})),P.addEventListener("click",(()=>{X(R)})),b.addEventListener("submit",(function(e){e.preventDefault();const r=e.submitter;s(r,!0,"Save","Saving..."),M.editUserInfo({name:q.value,about:L.value}).then((e=>{f.textContent=e.name,S.textContent=e.about,X(m),n(r,t)})).catch((e=>{console.error("Failed to fetch form data:",e)})).finally((()=>{s(r,!1,"Save","Saving...")}))})),k.addEventListener("submit",(function(e){e.preventDefault();const r={name:I.value,link:U.value},a=e.submitter;return s(a,!0,"Save","Saving..."),M.addNewCard(r).then((r=>{const a=K(r);G.prepend(a),X(E),e.target.reset(),n(C,t)})).catch((e=>{console.error("Failed to fetch card data:",e)})).finally((()=>{s(a,!1,"Save","Saving...")}))})),Y=t,Array.from(document.querySelectorAll(Y.formSelector)).forEach((e=>{((e,t)=>{const r=Array.from(e.querySelectorAll(t.inputSelector)),n=e.querySelector(t.submitButtonSelector);o(r,n,t),r.forEach((s=>{s.addEventListener("input",(function(){a(e,s,t),o(r,n,t)}))}))})(e,Y)}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,